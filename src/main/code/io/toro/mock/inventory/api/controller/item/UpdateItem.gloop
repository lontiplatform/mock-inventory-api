{
    "input": [
        {
            "name": "itemId"
        },
        {
            "name": "item",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "itemName"
                },
                {
                    "name": "quantityOnHand",
                    "type": "integer"
                },
                {
                    "name": "quantityAvailable",
                    "type": "integer"
                },
                {
                    "name": "customFields",
                    "type": "model",
                    "allowExtraProperties": true
                },
                {
                    "name": "sku"
                }
            ]
        }
    ],
    "output": [
        {
            "name": "APIResponse",
            "type": "model",
            "comments": "API response",
            "reference": "io.toro.mock.inventory.model.APIResponse",
            "gloopProperties": [
                {
                    "name": "item",
                    "type": "model",
                    "reference": "io.toro.mock.inventory.model.item.Item",
                    "gloopProperties": [
                        {
                            "name": "id"
                        }
                    ]
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer",
            "defaultValue": 200
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.inventory.api.controller.item.GetItem",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "tempItem",
                                    "type": "model",
                                    "reference": "io.toro.mock.inventory.model.item.Item",
                                    "gloopProperties": [
                                        {
                                            "name": "id"
                                        }
                                    ]
                                },
                                {
                                    "name": "getItemResponse",
                                    "type": "model",
                                    "gloopProperties": [
                                        {
                                            "name": "message"
                                        },
                                        {
                                            "name": "responseCode",
                                            "type": "integer",
                                            "defaultValue": 200
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "itemId"
                            ],
                            "to": [
                                "itemId"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "APIResponse",
                                "message"
                            ],
                            "to": [
                                "getItemResponse",
                                "message"
                            ]
                        },
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "getItemResponse",
                                "responseCode"
                            ]
                        },
                        {
                            "from": [
                                "APIResponse",
                                "item"
                            ],
                            "to": [
                                "tempItem"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        },
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "responseCode"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "getItemResponse.responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "className": "org.codehaus.groovy.runtime.DefaultGroovyMethods",
                                    "methodName": "each",
                                    "parameters": [
                                        "java.lang.Object",
                                        "groovy.lang.Closure"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "{ it ->\n\titem.customFields.keySet().contains(it)? null : item.customFields.put(\"${it}\", tempItem.customFields.\"${it}\")\n}",
                                            "evaluate": true,
                                            "to": [
                                                "closure"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "tempItem.customFields.keySet()",
                                            "evaluate": true,
                                            "to": [
                                                "self"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeGloop",
                                    "name": "io.toro.mock.inventory.sql.item.UpdateItem",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "recordUpdated",
                                                    "type": "boolean"
                                                }
                                            ]
                                        }
                                    ],
                                    "unload": [
                                        [
                                            "tempItem"
                                        ]
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "item",
                                                "itemName"
                                            ],
                                            "to": [
                                                "updateItemInput",
                                                "itemName"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "item",
                                                "quantityOnHand"
                                            ],
                                            "to": [
                                                "updateItemInput",
                                                "quantityOnHand"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "item",
                                                "quantityAvailable"
                                            ],
                                            "to": [
                                                "updateItemInput",
                                                "quantityAvailable"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "itemId"
                                            ],
                                            "to": [
                                                "updateItemInput",
                                                "itemId"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "item",
                                                "sku"
                                            ],
                                            "to": [
                                                "updateItemInput",
                                                "sku"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "item.customFields?.isNullValue()? \"{}\": item.customFields.asJson(false, false)",
                                            "evaluate": true,
                                            "to": [
                                                "updateItemInput",
                                                "customFields"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        },
                                        {
                                            "type": "set",
                                            "expression": "$gloopOutput.updateCount > 0",
                                            "evaluate": true,
                                            "to": [
                                                "recordUpdated"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "fork",
                                    "expression": "recordUpdated",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "true",
                                            "children": [
                                                {
                                                    "type": "invokeGloop",
                                                    "name": "io.toro.mock.inventory.sql.item.SelectItem",
                                                    "declare": [
                                                        {
                                                            "variables": [
                                                                {
                                                                    "name": "CUSTOM_FIELDS",
                                                                    "required": true
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "from": [
                                                                "itemId"
                                                            ],
                                                            "to": [
                                                                "selectItemInput",
                                                                "itemId"
                                                            ]
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "SKU"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "sku"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "ITEM_NAME"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "itemName"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "QUANTITY_ON_HAND"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "quantityOnHand"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "QUANTITY_AVAILABLE"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "quantityAvailable"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "DATE_CREATED"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "dateCreated"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "DATE_UPDATED"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "dateUpdated"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "CUSTOM_FIELDS"
                                                            ],
                                                            "to": [
                                                                "CUSTOM_FIELDS"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "selectItemOutput",
                                                                "ID"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "id"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "invokeCode",
                                                    "comments": "If a record is found, convert the JSON string for the custom field into a Gloop model, and them map it to the customFields Gloop model in the item model.",
                                                    "className": "io.toro.martini.JsonMethods",
                                                    "methodName": "jsonStringToGloopObject",
                                                    "parameters": [
                                                        "java.lang.String"
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "from": [
                                                                "CUSTOM_FIELDS"
                                                            ],
                                                            "to": [
                                                                "jsonString"
                                                            ]
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "from": [
                                                                "output"
                                                            ],
                                                            "to": [
                                                                "APIResponse",
                                                                "item",
                                                                "customFields"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "200",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "SUCCESS",
                                                            "to": [
                                                                "APIResponse",
                                                                "result"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "\"Successfully updated item with id \\\"${itemId}\\\".\"",
                                                            "evaluate": true,
                                                            "to": [
                                                                "APIResponse",
                                                                "message"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "label": "false",
                                            "lines": [
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "APIException",
                                                        "result"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "APIException",
                                                        "httpErrorCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "Failed to update record. Check Martini logs for more info.",
                                                    "to": [
                                                        "APIException",
                                                        "message"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "fork",
                    "expression": "$gloopException.message.contains( 'java.sql.SQLIntegrityConstraintViolationException' )",
                    "children": [
                        {
                            "type": "invokeCode",
                            "label": "true",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "error",
                            "parameters": [
                                "java.lang.String",
                                "java.lang.Throwable"
                            ],
                            "inputs": [
                                {
                                    "from": [
                                        "$gloopException",
                                        "realException"
                                    ],
                                    "to": [
                                        "throwable"
                                    ]
                                },
                                {
                                    "from": [
                                        "$gloopException",
                                        "gloopStackTrace"
                                    ],
                                    "to": [
                                        "message"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "set",
                                    "expression": "400",
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "ERROR",
                                    "to": [
                                        "APIException",
                                        "result"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "400",
                                    "to": [
                                        "APIException",
                                        "httpErrorCode"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "invokeCode",
                            "label": "false",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "error",
                            "parameters": [
                                "java.lang.String",
                                "java.lang.Throwable"
                            ],
                            "inputs": [
                                {
                                    "from": [
                                        "$gloopException",
                                        "realException"
                                    ],
                                    "to": [
                                        "throwable"
                                    ]
                                },
                                {
                                    "from": [
                                        "$gloopException",
                                        "gloopStackTrace"
                                    ],
                                    "to": [
                                        "message"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "set",
                                    "expression": "500",
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "ERROR",
                                    "to": [
                                        "APIException",
                                        "result"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "500",
                                    "to": [
                                        "APIException",
                                        "httpErrorCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "Encountered an exception while processing the request.",
                                    "to": [
                                        "APIException",
                                        "message"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}